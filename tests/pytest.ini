[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Custom markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests that integrate multiple components
    gpu: marks tests that require GPU acceleration
    numba: marks tests that specifically test Numba acceleration
    async: marks tests that test asynchronous functionality
    property: marks property-based tests using hypothesis
    benchmark: marks performance benchmark tests

# Configure test output verbosity and formatting
verbose = 2
color = yes
showlocals = yes

# Configure test execution
xvs = true
xvs_exclude =
    */__pycache__/*
    */\.*

# Configure warnings behavior
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::ResourceWarning
    error::RuntimeWarning

# Configure timeout for long-running tests
timeout = 300
timeout_method = thread

# Configure hypothesis for property-based testing
hypothesis_profile = default
hypothesis_verbosity = normal

# Configure coverage reporting
addopts = --cov=mfe --cov-report=term-missing --cov-report=xml

# Configure logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Configure doctest integration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL
